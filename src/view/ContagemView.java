/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import DAO.ContagemDAO;
import DAO.FuncaoDAO;
import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import entities.Contagem;
import entities.Funcoes;
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Session;
import util.HibernateUtil;
import static util.HibernateUtil.getSessionFactory;

/**
 *
 * @author Marlon Moro
 */
public class ContagemView extends javax.swing.JInternalFrame {

    Contagem objContagem;
    Funcoes objFuncoes;
    List<Funcoes> listaFuncoes;
    Integer idAux;
    Document doc;

    public ContagemView() {
        initComponents();
        this.setVisible(true);
        pnl_funcoes.setVisible(false);
        btnInserirFuncao.setVisible(false);
        listaFuncoes = new ArrayList<>();
        btnConcluirContagem.setEnabled(false);
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNomeProjeto = new javax.swing.JTextField();
        pnl_funcoes = new javax.swing.JPanel();
        btnSalvarFuncao = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtNomeFuncao = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbxTipoFuncao = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtQntTiposDados = new javax.swing.JTextField();
        lblTipoRegistro = new javax.swing.JLabel();
        txtQntTipoRegistro = new javax.swing.JTextField();
        btnCancelarFuncao = new javax.swing.JButton();
        btnInserirFuncao = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblFuncoes = new javax.swing.JTable();
        btnConcluirContagem = new javax.swing.JButton();
        btnIniciarContagem = new javax.swing.JButton();

        setClosable(true);

        jLabel1.setText("Nome do Projeto:");

        pnl_funcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações da Função"));

        btnSalvarFuncao.setText("Salvar Função");
        btnSalvarFuncao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarFuncaoActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome:");

        jLabel4.setText("Tipo Função:");

        cbxTipoFuncao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALI", "AIE", "EE", "CE", "SE" }));
        cbxTipoFuncao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoFuncaoActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantidade de Tipos de Dados:");

        lblTipoRegistro.setText("Quantidade de Tipos de Registros:");

        btnCancelarFuncao.setText("Cancelar");
        btnCancelarFuncao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarFuncaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_funcoesLayout = new javax.swing.GroupLayout(pnl_funcoes);
        pnl_funcoes.setLayout(pnl_funcoesLayout);
        pnl_funcoesLayout.setHorizontalGroup(
            pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_funcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_funcoesLayout.createSequentialGroup()
                        .addComponent(lblTipoRegistro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQntTipoRegistro))
                    .addGroup(pnl_funcoesLayout.createSequentialGroup()
                        .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnl_funcoesLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNomeFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnl_funcoesLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxTipoFuncao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl_funcoesLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQntTiposDados))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_funcoesLayout.createSequentialGroup()
                        .addGap(0, 71, Short.MAX_VALUE)
                        .addComponent(btnCancelarFuncao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarFuncao)))
                .addContainerGap())
        );
        pnl_funcoesLayout.setVerticalGroup(
            pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_funcoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNomeFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxTipoFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtQntTiposDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoRegistro)
                    .addComponent(txtQntTipoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_funcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarFuncao)
                    .addComponent(btnCancelarFuncao))
                .addGap(5, 5, 5))
        );

        btnInserirFuncao.setText("Inserir Função");
        btnInserirFuncao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirFuncaoActionPerformed(evt);
            }
        });

        tblFuncoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Nome da função", "Tipo", "TD", "TR", "Complexidade", "PFs"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblFuncoes);

        btnConcluirContagem.setText("Concluir Contagem");
        btnConcluirContagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConcluirContagemActionPerformed(evt);
            }
        });

        btnIniciarContagem.setText("Iniciar Contagem");
        btnIniciarContagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarContagemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnConcluirContagem))
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNomeProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(66, 66, 66))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnIniciarContagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInserirFuncao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(pnl_funcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl_funcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNomeProjeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInserirFuncao)
                            .addComponent(btnIniciarContagem))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConcluirContagem)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInserirFuncaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirFuncaoActionPerformed
        //comportamento da tela
        pnl_funcoes.setVisible(true);
        btnInserirFuncao.setEnabled(false);
        btnConcluirContagem.setEnabled(false);
        


    }//GEN-LAST:event_btnInserirFuncaoActionPerformed

    private void btnCancelarFuncaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarFuncaoActionPerformed
        // TODO add your handling code here:
        liberaCamposContagem();
    }//GEN-LAST:event_btnCancelarFuncaoActionPerformed

    private void btnIniciarContagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarContagemActionPerformed
        // TODO add your handling code here:

        
        objContagem = new Contagem();
        objContagem.setNomeProjeto(txtNomeProjeto.getText());
        objContagem.setTotalPontos(1);

        ContagemDAO contagemDAO = new ContagemDAO();
        idAux = contagemDAO.salvar(objContagem);
        objContagem.setIdContagem(idAux);
        iniciaContagem();

    }//GEN-LAST:event_btnIniciarContagemActionPerformed

    private void btnSalvarFuncaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarFuncaoActionPerformed
        // TODO add your handling code here:

        if (txtNomeFuncao.getText().isEmpty() || txtQntTiposDados.getText().isEmpty() || txtQntTipoRegistro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Prencha todos os campos.", "Erro", JOptionPane.WARNING_MESSAGE);
        } else {
            ContagemDAO contagemDAO = new ContagemDAO();
            FuncaoDAO funcaoDAO = new FuncaoDAO();

            objFuncoes = new Funcoes();
            objFuncoes.setNome(txtNomeFuncao.getText());
            objFuncoes.setTipoFuncao(cbxTipoFuncao.getSelectedItem().toString());
            objFuncoes.setQntTd(Integer.parseInt(txtQntTiposDados.getText()));
            objFuncoes.setQntTr(Integer.parseInt(txtQntTipoRegistro.getText()));
            objFuncoes.setQntPf(contaPFFuncao(objFuncoes));
            objFuncoes.setContagem(contagemDAO.buscaID(idAux));

            listaFuncoes.add(objFuncoes);
            funcaoDAO.salvar(objFuncoes);
            atualizaTabela();
            liberaCamposContagem();

        }

    }//GEN-LAST:event_btnSalvarFuncaoActionPerformed

    private void cbxTipoFuncaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoFuncaoActionPerformed
        // TODO add your handling code here:
        if (cbxTipoFuncao.getSelectedIndex() > 1) {
            lblTipoRegistro.setText("Quantidade de Arquivos Referenciados");
        } else {
            lblTipoRegistro.setText("Quantidade de Tipos de Registros:");
        }
    }//GEN-LAST:event_cbxTipoFuncaoActionPerformed

    private void btnConcluirContagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConcluirContagemActionPerformed
        // TODO add your handling code here:
                       
        ContagemDAO contagemDAO = new ContagemDAO();
        Contagem auxContagem = contagemDAO.buscaID(idAux);
        auxContagem.setTotalPontos(totalPF());
        contagemDAO.atualiza(auxContagem);

        geraPDF(auxContagem);

    }//GEN-LAST:event_btnConcluirContagemActionPerformed

    private void liberaCamposContagem() {
        pnl_funcoes.setVisible(false);
        btnConcluirContagem.setEnabled(true);
        btnInserirFuncao.setEnabled(true);
        txtNomeFuncao.setText("");
        txtQntTipoRegistro.setText("");
        txtQntTiposDados.setText("");
    }

    private void iniciaContagem() {
        if (txtNomeProjeto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Prencha o nome do projeto.", "Erro", JOptionPane.WARNING_MESSAGE);
        } else {
            pnl_funcoes.setVisible(true);
            txtNomeProjeto.setEditable(false);
            btnInserirFuncao.setVisible(true);
            btnIniciarContagem.setVisible(false);
            btnInserirFuncao.setEnabled(false);
            

            objContagem = new Contagem();
            objContagem.setNomeProjeto(txtNomeProjeto.getText());
            objContagem.setTipoContagem(1);

        }
    }

    private void atualizaTabela() {
        String dados[][] = new String[listaFuncoes.size()][6];
        int i = 0;
        for (Funcoes funcao : listaFuncoes) {
            dados[i][0] = funcao.getNome();
            dados[i][1] = funcao.getTipoFuncao();
            dados[i][2] = String.valueOf(funcao.getQntTd());
            dados[i][3] = String.valueOf(funcao.getQntTr());

            if (funcao.getComplexidade() == 1) {
                dados[i][4] = "Baixa";
            }
            if (funcao.getComplexidade() == 2) {
                dados[i][4] = "Média";
            }
            if (funcao.getComplexidade() == 3) {
                dados[i][4] = "Alta";
            }
            dados[i][5] = String.valueOf(funcao.getQntPf());
            i++;
        }

        String tituloColuna[] = {"Nome Função", "Tipo", "TD", "TR", "Complexidade", "Quantidade Pontos Função"};
        DefaultTableModel tabelaCliente = new DefaultTableModel();
        tabelaCliente.setDataVector(dados, tituloColuna);
        tblFuncoes.setModel(new DefaultTableModel(dados, tituloColuna) {
            boolean[] canEdit = new boolean[]{
                false, false, false, false, false, false
            };

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        tblFuncoes.getColumnModel().getColumn(0).setPreferredWidth(250);
        tblFuncoes.getColumnModel().getColumn(1).setPreferredWidth(100);
        tblFuncoes.getColumnModel().getColumn(2).setPreferredWidth(100);
        tblFuncoes.getColumnModel().getColumn(3).setPreferredWidth(100);
        tblFuncoes.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblFuncoes.getColumnModel().getColumn(5).setPreferredWidth(100);

        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        tblFuncoes.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        tblFuncoes.setRowHeight(25);
        tblFuncoes.updateUI();
    }

    private int contaPFFuncao(Funcoes funcao) {
        //Tabela para determinacao da qnt de PF
        if (funcao.getTipoFuncao().equals("ALI")) {
            if (funcao.getQntTd() < 20) {
                //primeira coluna da tabela
                if (funcao.getQntTr() < 5) {
                    //baixa
                    funcao.setQntPf(7);
                    funcao.setComplexidade(1);
                } else {
                    //media
                    funcao.setQntPf(10);
                    funcao.setComplexidade(2);
                }
            }

            if (funcao.getQntTd() >= 20 && funcao.getQntTd() <= 50) {
                //Segunda coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(7);
                    funcao.setComplexidade(1);
                }
                if (funcao.getQntTr() >= 2 && funcao.getQntTr() <= 5) {
                    funcao.setQntPf(10);
                    funcao.setComplexidade(2);
                }
                if (funcao.getQntTr() > 5) {
                    funcao.setQntPf(15);
                    funcao.setComplexidade(3);
                }
            }

            if (funcao.getQntTd() > 50) {
                //terceira coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(10);
                    funcao.setComplexidade(2);
                } else {
                    funcao.setQntPf(15);
                    funcao.setComplexidade(3);
                }
            }
        }

        if (funcao.getTipoFuncao().equals("AIE")) {
            if (funcao.getQntTd() < 20) {
                //primeira coluna da tabela
                if (funcao.getQntTr() < 5) {
                    //baixa
                    funcao.setQntPf(5);
                    funcao.setComplexidade(1);
                } else {
                    //media
                    funcao.setQntPf(7);
                    funcao.setComplexidade(2);
                }
            }

            if (funcao.getQntTd() >= 20 && funcao.getQntTd() <= 50) {
                //Segunda coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(5);
                    funcao.setComplexidade(1);
                }
                if (funcao.getQntTr() >= 2 && funcao.getQntTr() <= 5) {
                    funcao.setQntPf(7);
                    funcao.setComplexidade(2);
                }
                if (funcao.getQntTr() > 5) {
                    funcao.setQntPf(10);
                    funcao.setComplexidade(3);
                }
            }

            if (funcao.getQntTd() > 50) {
                //terceira coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(7);
                    funcao.setComplexidade(2);
                } else {
                    funcao.setQntPf(10);
                    funcao.setComplexidade(3);
                }
            }

        }

        if (funcao.getTipoFuncao().equals("EE")) {

            if (funcao.getQntTd() < 5) {
                //primeira coluna da tabela
                if (funcao.getQntTr() <= 2) {
                    //baixa
                    funcao.setQntPf(3);
                    funcao.setComplexidade(1);
                } else {
                    //media
                    funcao.setQntPf(4);
                    funcao.setComplexidade(2);
                }
            }

            if (funcao.getQntTd() >= 5 && funcao.getQntTd() <= 15) {
                //Segunda coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(3);
                    funcao.setComplexidade(1);
                }
                if (funcao.getQntTr() == 2) {
                    funcao.setQntPf(4);
                    funcao.setComplexidade(2);
                }
                if (funcao.getQntTr() > 2) {
                    funcao.setQntPf(6);
                    funcao.setComplexidade(3);
                }
            }

            if (funcao.getQntTd() > 19) {
                //terceira coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(4);
                    funcao.setComplexidade(2);
                } else {
                    funcao.setQntPf(6);
                    funcao.setComplexidade(3);
                }
            }
        }

        if (funcao.getTipoFuncao().equals("SE")) {

            if (funcao.getQntTd() < 6) {
                //primeira coluna da tabela
                if (funcao.getQntTr() <= 3) {
                    //baixa
                    funcao.setQntPf(4);
                    funcao.setComplexidade(1);
                } else {
                    //media
                    funcao.setQntPf(5);
                    funcao.setComplexidade(2);
                }
            }

            if (funcao.getQntTd() >= 6 && funcao.getQntTd() <= 19) {
                //Segunda coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(4);
                    funcao.setComplexidade(1);
                }
                if (funcao.getQntTr() <= 3) {
                    funcao.setQntPf(5);
                    funcao.setComplexidade(2);
                }
                if (funcao.getQntTr() > 3) {
                    funcao.setQntPf(7);
                    funcao.setComplexidade(3);
                }
            }

            if (funcao.getQntTd() > 19) {
                //terceira coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(5);
                    funcao.setComplexidade(2);
                } else {
                    funcao.setQntPf(7);
                    funcao.setComplexidade(3);
                }
            }
        }

        if (funcao.getTipoFuncao().equals("CE")) {

            if (funcao.getQntTd() < 6) {
                //primeira coluna da tabela
                if (funcao.getQntTr() <= 3) {
                    //baixa
                    funcao.setQntPf(3);
                    funcao.setComplexidade(1);
                } else {
                    //media
                    funcao.setQntPf(4);
                    funcao.setComplexidade(2);
                }
            }

            if (funcao.getQntTd() >= 6 && funcao.getQntTd() <= 19) {
                //Segunda coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(3);
                    funcao.setComplexidade(1);
                }
                if (funcao.getQntTr() <= 3) {
                    funcao.setQntPf(4);
                    funcao.setComplexidade(2);
                }
                if (funcao.getQntTr() > 3) {
                    funcao.setQntPf(6);
                    funcao.setComplexidade(3);
                }
            }

            if (funcao.getQntTd() > 19) {
                //terceira coluna
                if (funcao.getQntTr() < 2) {
                    funcao.setQntPf(4);
                    funcao.setComplexidade(2);
                } else {
                    funcao.setQntPf(6);
                    funcao.setComplexidade(3);
                }
            }
        }

        return funcao.getQntPf();
    }

    private int totalPF() {

        int totalPF = 0;
        for (Funcoes funcao : listaFuncoes) {
                totalPF = totalPF + funcao.getQntPf();

            }

        

        return totalPF;
    }

    public void geraPDF(Contagem c) {
        String diretorio = null;
        String pasta = "Contagens";
        String separador = java.io.File.separator;

        try {
            Image topo = Image.getInstance("D:\\My Documents\\NetBeansProjects\\APFMarlon\\build\\classes\\imagem\\topo.jpg");
            diretorio = "C:" + separador + pasta;
            if (!new File(diretorio).exists()) {
                (new File(diretorio)).mkdir();
            }

            doc = new Document(PageSize.A4, 41.5f, 41.5f, 55.2f, 55.2f);
            String caminho = "C:/Contagens/Relatorio " + c.getNomeProjeto() + ".pdf";
            PdfWriter.getInstance(doc, new FileOutputStream(caminho));
            doc.open();

            Font f1 = new Font(Font.FontFamily.HELVETICA, 14, Font.BOLD);
            Font f2 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
            Font f3 = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
            Font f4 = new Font(Font.FontFamily.HELVETICA, 10, Font.BOLD);
            Font f5 = new Font(Font.FontFamily.HELVETICA, 10, Font.NORMAL);

            Paragraph titulo2 = new Paragraph("Contagem do Projeto: " + c.getNomeProjeto(), f2);
            titulo2.setAlignment(Element.ALIGN_CENTER);
            titulo2.setSpacingAfter(10);

            doc.add(topo);
            doc.add(titulo2);

            PdfPTable tabela = new PdfPTable(new float[]{0.3f, 0.2f, 0.3f, 0.5f});

            tabela.setHorizontalAlignment(Element.ALIGN_CENTER);
            tabela.setWidthPercentage(100f);

            PdfPCell cabecalho1 = new PdfPCell(new Paragraph("Nome da Função", f3));
            cabecalho1.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho1.setBorder(0);

            PdfPCell cabecalho2 = new PdfPCell(new Paragraph("Tipo", f3));
            cabecalho2.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho2.setBorder(0);

            PdfPCell cabecalho3 = new PdfPCell(new Paragraph("Complexidade", f3));
            cabecalho3.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho3.setBorder(0);

            PdfPCell cabecalho4 = new PdfPCell(new Paragraph("Quantidade de PF", f3));
            cabecalho4.setHorizontalAlignment(Element.ALIGN_JUSTIFIED);
            cabecalho4.setBorder(0);

            tabela.addCell(cabecalho1);
            tabela.addCell(cabecalho2);
            tabela.addCell(cabecalho3);
            tabela.addCell(cabecalho4);

            FuncaoDAO funcaDAO = new FuncaoDAO();

            List<Funcoes> lista = new ArrayList<>();
            lista = funcaDAO.buscaTodos(c);

            BaseColor cores[] = new BaseColor[2];
            cores[0] = BaseColor.LIGHT_GRAY;
            cores[1] = BaseColor.WHITE;
            int i = 0;

            for (Funcoes f : lista) {
                if (i == 0) {
                    i = 1;
                } else {
                    i = 0;
                }

                Paragraph p1 = new Paragraph(f.getNome(), f5);
                p1.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col1 = new PdfPCell(p1);
                col1.setBackgroundColor(cores[i]);
                col1.setBorder(0);

                Paragraph p2 = new Paragraph(f.getTipoFuncao(), f5);
                p2.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col2 = new PdfPCell(p2);
                col2.setBackgroundColor(cores[i]);
                col2.setBorder(0);

                String complexidade = null;
                if (f.getComplexidade() == 1) {
                    complexidade = "Baixa";
                }
                if (f.getComplexidade() == 2) {
                    complexidade = "Média";
                }
                if (f.getComplexidade() == 3) {
                    complexidade = "Alta";
                }
                Paragraph p3 = new Paragraph(complexidade, f5);
                p3.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col3 = new PdfPCell(p3);
                col3.setBackgroundColor(cores[i]);
                col3.setBorder(0);

                Paragraph p4 = new Paragraph(String.valueOf(f.getQntPf()), f5);
                p4.setAlignment(Element.ALIGN_JUSTIFIED);
                PdfPCell col4 = new PdfPCell(p4);
                col4.setBackgroundColor(cores[i]);
                col4.setBorder(0);

                tabela.addCell(col1);
                tabela.addCell(col2);
                tabela.addCell(col3);
                tabela.addCell(col4);

            }
            //alterar
            doc.add(tabela);

            Paragraph divisor = new Paragraph("------------------------------------------------------------------------------------------------------------------------------", f2);
            divisor.setAlignment(Element.ALIGN_LEFT);
            divisor.setSpacingBefore(5);
            divisor.setSpacingAfter(10);

            doc.add(divisor);

            Paragraph totalPf = new Paragraph("Total de Pontos Contados: " + String.valueOf(c.getTotalPontos()), f2);
            totalPf.setAlignment(Element.ALIGN_CENTER);
            totalPf.setSpacingAfter(5);
            totalPf.setSpacingBefore(10);

            doc.add(totalPf);

            doc.close();
            JOptionPane.showMessageDialog(null, "Relatório salvo com sucesso em C:/Contagens/");
            Desktop.getDesktop().open(new File(caminho));
            ContagemView.this.dispose();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarFuncao;
    private javax.swing.JButton btnConcluirContagem;
    private javax.swing.JButton btnIniciarContagem;
    private javax.swing.JButton btnInserirFuncao;
    private javax.swing.JButton btnSalvarFuncao;
    private javax.swing.JComboBox<String> cbxTipoFuncao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTipoRegistro;
    private javax.swing.JPanel pnl_funcoes;
    private javax.swing.JTable tblFuncoes;
    private javax.swing.JTextField txtNomeFuncao;
    private javax.swing.JTextField txtNomeProjeto;
    private javax.swing.JTextField txtQntTipoRegistro;
    private javax.swing.JTextField txtQntTiposDados;
    // End of variables declaration//GEN-END:variables
}
